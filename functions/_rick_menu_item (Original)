#!/usr/bin/env zsh
# _rick_menu_item - Render a single menu item
#
# Usage:
#   _rick_menu_item <index> <text> <is_selected> [width]
#
# Arguments:
#   index - The item index (0-based)
#   text - The item text
#   is_selected - Whether the item is selected (0 or 1)
#   width - Optional width for the menu item (defaults to menu width)
#
# Returns:
#   Prints the rendered menu item to stdout
#
# Example:
#   _rick_menu_item 0 "Option 1" 1  # Renders a selected first menu item

# Function implementation
_rick_menu_item() {
  local index="$1"
  local text="$2"
  local is_selected="$3"
  local width="${4:-$RICK_MENU_WIDTH}"
  
  # Validate inputs
  [[ -z "$index" || -z "$text" || -z "$is_selected" ]] && return 1
  [[ "$width" -lt 1 ]] && width=$RICK_MENU_WIDTH
  
  # Determine the display character
  local indicator
  if (( is_selected )); then
    indicator=$(_rick_menu_symbol "selected")
    # Apply selected color
    text=$(_rick_menu_colorize "selected" "$text")
  else
    indicator=$(_rick_menu_symbol "unselected")
    # Apply regular text color
    text=$(_rick_menu_colorize "normal" "$text")
  fi
  
  # Format the item with the proper indentation and spacing
  printf " %s %s " "$indicator" "$text"
  
  # Fill with spaces to the end of the width
  local text_length=${#${text//\[[0-9;]*m/}}
  local padding=$(( width - text_length - 4 ))  # 4 for the spaces and indicator
  [[ $padding -gt 0 ]] && printf "%${padding}s" ""
}

# Call the function with the arguments passed to this script
_rick_menu_item "$@" 