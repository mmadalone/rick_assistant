#!/usr/bin/env zsh
# _rick_menu_handle_key - Handle a key press in the menu
#
# Usage:
#   _rick_menu_handle_key <key> <current_index> <max_index>
#
# Arguments:
#   key - The key that was pressed (as detected by _rick_menu_read_key)
#   current_index - The current selected index
#   max_index - The maximum index (number of items - 1)
#
# Returns:
#   Prints the action or new index to stdout:
#     - UP: Move selection up
#     - DOWN: Move selection down
#     - SELECT: Select current item
#     - CANCEL: Exit menu
#     - numeric value: Set selection to this index
#
# Example:
#   _rick_menu_handle_key "down" 0 5

_rick_menu_handle_key() {
  # Validate inputs
  if [[ $# -lt 3 ]]; then
    echo "$2"  # Return the current index if not enough parameters
    return 1
  fi
  
  local key="$1"
  local current_index="$2"
  local max_index="$3"
  
  # Debug output for ESC key
  if [[ "$key" == "escape" && -n "$RICK_DEBUG" && "$RICK_DEBUG" -eq 1 ]]; then
    echo "DEBUG: _rick_menu_handle_key received ESC key, will send CANCEL" >&2
  fi
  
  # Process key and determine action
  case "$key" in
    # Navigation keys
    "up")
      echo "UP"
      ;;
    "down")
      echo "DOWN"
      ;;
    "left")
      echo "LEFT"
      ;;
    "right")
      echo "RIGHT"
      ;;
      
    # Selection keys
    "enter")
      echo "SELECT"
      ;;
      
    # Exit/cancel keys
    "escape"|"q"|"Q")
      echo "CANCEL"
      ;;
      
    # Number keys for direct selection
    [0-9])
      # Check if number is in valid range
      if (( key >= 0 && key <= max_index )); then
        echo "$key"
      else
        # If out of range, keep current selection
        echo "$current_index"
      fi
      ;;
      
    # Default: maintain current selection
    *)
      echo "$current_index"
      ;;
  esac
}

# Call the function with the arguments passed to this script
_rick_menu_handle_key "$@" 