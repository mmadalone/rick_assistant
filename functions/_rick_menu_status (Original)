#!/usr/bin/env zsh
# _rick_menu_status - Display the status menu for Rick Assistant
#
# Usage:
#   _rick_menu_status
#
# Returns:
#   0 on success, non-zero on error

_rick_menu_status() {
  # Clear screen
  clear
  
  # Get system information
  local cpu_info="CPU: $(awk '{u=$2+$4; t=$2+$4+$5; if (NR==1){u1=u; t1=t;} else print int(($2+$4-u1) * 100 / (t-t1)) "%"}' <(grep 'cpu ' /proc/stat) <(sleep 1;grep 'cpu ' /proc/stat) 2>/dev/null || echo "N/A")"
  local memory_info="Memory: $(free -h | awk '/^Mem/ {print $3 "/" $2}' 2>/dev/null || echo "N/A")"
  local disk_info="Disk: $(df -h / | awk 'NR==2 {print $3 "/" $2}' 2>/dev/null || echo "N/A")"
  local load_info="Load: $(uptime | awk -F'[a-z]:' '{ print $2}' 2>/dev/null || echo "N/A")"
  
  # Print header
  print -P "%F{green}Rick Assistant Status%f"
  print "==========================="
  print ""
  
  # Print system info
  print -P "%F{yellow}${cpu_info}%f"
  print -P "%F{yellow}${memory_info}%f"
  print -P "%F{yellow}${disk_info}%f"
  print -P "%F{yellow}${load_info}%f"
  print ""
  
  # Define options
  local options=("Back to Main Menu" "Refresh Status")
  
  # Print options with numbers
  local i=1
  for opt in "${options[@]}"; do
    print -P "%F{cyan}$i)%f $opt"
    ((i++))
  done
  
  print ""
  print -n "Enter choice [1-${#options}]: "
  
  # Read user choice
  read choice
  
  # Process choice
  case $choice in
    1) _rick_menu main ;;
    2) _rick_menu_status ;;
    *) print -P "%F{red}Invalid choice!%f"; sleep 2; _rick_menu_status ;;
  esac
  
  return 0
}

# Call the function with the arguments passed to this script
_rick_menu_status "$@" 