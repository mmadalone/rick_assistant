#!/usr/bin/env zsh
# _rick_menu_handle_key - Handle a key press in the menu
#
# Usage:
#   _rick_menu_handle_key <key> <current_index> <max_index>
#
# Arguments:
#   key - The key that was pressed (as detected by _rick_menu_read_key)
#   current_index - The current selected index
#   max_index - The maximum index (number of items - 1)
#
# Returns:
#   Prints the new index or command to stdout
#
# Example:
#   _rick_menu_handle_key "down" 0 5

_rick_menu_handle_key() {
  # Validate inputs
  if [[ $# -lt 3 ]]; then
    echo "$2"  # Return the current index if not enough parameters
    return 1
  fi
  
  local key="$1"
  local current_index="$2"
  local max_index="$3"
  
  # Default to keeping the same index
  local new_index=$current_index
  
  # Handle key press
  case "$key" in
    # Navigation keys - Down
    down|j)
      # Using arithmeric calculation within a safe wrapper
      if [[ $current_index -eq $max_index ]]; then
        new_index=0
      else
        new_index=$(( current_index + 1 ))
      fi
      ;;
    
    # Navigation keys - Up
    up|k)
      if [[ $current_index -eq 0 ]]; then
        new_index=$max_index
      else
        new_index=$(( current_index - 1 ))
      fi
      ;;
    
    # Navigation keys - Home
    home|g)
      new_index=0
      ;;
    
    # Navigation keys - End
    end|G)
      new_index=$max_index
      ;;
    
    # Selection
    enter|space)
      echo "SELECT"
      return 0
      ;;
    
    # Cancellation
    escape|q|Q)
      echo "CANCEL"
      return 0
      ;;
    
    # Toggle (for checkbox menus)
    t|T)
      echo "TOGGLE"
      return 0
      ;;
    
    # Default - keep current selection
    *)
      ;;
  esac
  
  # Return the new index as a clean number
  printf "%d" "$new_index"
}

# Call the function with the arguments passed to this script
_rick_menu_handle_key "$@" 